--STORED PROCEDURES

--PRIMER

CREATE PROCEDURE SP_ConsultaMesero @NOMBRE NVARCHAR(50), @PUESTO NVARCHAR(15) 
AS

BEGIN
SELECT * FROM EMPLEADOS WHERE NOM_EMPLEADO = @NOMBRE AND PUESTO_EMPLEADO = @PUESTO;
PRINT 'HECHO CORRECTAMENTE' 
END

--SEGUNDO

CREATE PROCEDURE SP_ConsultaBartender @NOMBRE NVARCHAR(50), @PUESTO NVARCHAR(15)
AS

BEGIN
SELECT * FROM EMPLEADOS WHERE NOM_EMPLEADO = @NOMBRE AND PUESTO_EMPLEADO = @PUESTO;
PRINT 'HECHO CORRECTAMENTE'
END

--TERCER

CREATE PROCEDURE SP_ConsultaMayorMenorVenta @MAYOR MONEY, @MENOR MONEY
AS

BEGIN
SELECT MAX(TOTAL) AS MAYORVENTA, MIN(TOTAL) AS MENORVENTA FROM DETALLE_VENTA;
PRINT 'HECHO CORRECTAMENTE'
END

--CUARTO

CREATE PROCEDURE SP_ConsultaMayorMenorCompra @MAYOR INT, @MENOR INT
AS

BEGIN
SELECT MAX(SUBTOTAL) AS MAYORCOMPRA, MIN(SUBTOTAL) AS MENORCOMPRA FROM COMPRA;
PRINT 'HECHO CORRECTAMENTE'
END

--QUINTO

CREATE PROCEDURE SP_ConsultaClienteQueGasta1500oMenos @ID INT, @TOTAL MONEY
AS

BEGIN
SELECT ID_CLIENTE FROM VENTA WHERE TOTAL <= '1500' GROUP BY ID_CLIENTE;
PRINT 'HECHO CORRECTAMENTE'
END

--SEXTO

CREATE PROCEDURE SP_ConsultaVentasTotales @FILAS INT, @TOTAL MONEY
AS

BEGIN
SELECT COUNT(*) AS TOTALFILAS, SUM(TOTAL) AS VENTASTOTALES FROM VENTA ORDER BY TOTALFILAS;
PRINT 'HECHO CORRECTAMENTE'
END

--SEPTIMO

CREATE PROCEDURE SP_ConsultaPrimeraUltimaCompra @FECHA DATE
AS

BEGIN
SELECT MAX(FECHA) AS ULTIMACOMPRA, MIN(FECHA) AS PRIMERACOMPRA FROM COMPRA;
PRINT 'HECHO CORRECTAMENTE'
END

--OCTAVO

CREATE PROCEDURE SP_ConsultaProductoMasyMenosCARO @PRECIO INT 
AS

BEGIN
SELECT MAX(PRECIO_COSTO) AS PRODUCTOMASCARO, MIN(PRECIO_COSTO) AS PRODUCTOMASBARATO FROM DETALLE_COMPRA;
PRINT 'HECHO CORRECTAMENTE'
END

--NOVENO

CREATE PROCEDURE SP_ConsultaTotalEmpleados @ID INT
AS

BEGIN
SELECT COUNT(*) AS TOTALEMPLEADOS FROM EMPLEADOS GROUP BY NOM_EMPLEADO;
PRINT 'HECHO CORRECTAMENTE'
END

--DECIMO

CREATE PROCEDURE SP_ConsultaEntradasDeComida @TIPO NVARCHAR(15)
AS

BEGIN

SELECT * FROM ALIMENTOS WHERE TIPO_ALIMENTO = @TIPO;
PRINT 'HECHO CORRECTAMENTE'
END

--TIGGERS

--PRIMER TIGGRER PARA ANULAR QUE UNA VENTA SEA MENOR A 0

CREATE TRIGGER TR_01 ON VENTA FOR INSERT
AS
	IF(SELECT TOTAL FROM VENTA) <0
BEGIN
	PRINT 'NO PUEDE HABER TOTAL MENOR A 0'
	ROLLBACK --ANULA 
END

--SEGUNDO TRIGGER PARA ANULAR UNA COMPRA SEA MENOR A 0 

CREATE TRIGGER TR_02 ON COMPRA FOR INSERT
AS
	IF(SELECT SUBTOTAL FROM COMPRA) <0
BEGIN
	PRINT 'NO PUEDE HABER UNA COMPRA A PROVEEDOR MENOR A 0'
	ROLLBACK --ANULA
END

--FUNCION

CREATE FUNCTION F_PromedioIva
(
@VALOR1 FLOAT,
@VALOR2 FLOAT,
@VALOR3 FLOAT,
@VALOR4 FLOAT,
@VALOR5 FLOAT,
@VALOR6 FLOAT,
@VALOR7 FLOAT,
@VALOR8 FLOAT,
@VALOR9 FLOAT,
@VALOR10 FLOAT
)
RETURNS FLOAT
AS

BEGIN
DECLARE @RESULT FLOAT
SET @RESULT = (@VALOR1 + @VALOR2 + @VALOR3 + @VALOR4 + @VALOR5 + @VALOR6 + @VALOR7 + @VALOR8 + @VALOR9 + @VALOR10) / 10
RETURN @RESULT
END